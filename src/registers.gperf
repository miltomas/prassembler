%{
#include <string.h>
#include "assembler.h"
%}

struct GperfReg {
	const char *name;
	const struct Register reg;
};
%%
al, { BYTE, REG_GP, { .gp_reg = GP_REG_A } }
ax, { WORD, REG_GP, { .gp_reg = GP_REG_A } }
eax, { DWORD, REG_GP, { .gp_reg = GP_REG_A } }
rax, { QWORD, REG_GP, { .gp_reg = GP_REG_A } }
cl, { BYTE, REG_GP, { .gp_reg = GP_REG_C } }
cx, { WORD, REG_GP, { .gp_reg = GP_REG_C } }
ecx, { DWORD, REG_GP, { .gp_reg = GP_REG_C } }
rcx, { QWORD, REG_GP, { .gp_reg = GP_REG_C } }
dl, { BYTE, REG_GP, { .gp_reg = GP_REG_D } }
dx, { WORD, REG_GP, { .gp_reg = GP_REG_D } }
edx, { DWORD, REG_GP, { .gp_reg = GP_REG_D } }
rdx, { QWORD, REG_GP, { .gp_reg = GP_REG_D } }
bl, { BYTE, REG_GP, { .gp_reg = GP_REG_B } }
bx, { WORD, REG_GP, { .gp_reg = GP_REG_B } }
ebx, { DWORD, REG_GP, { .gp_reg = GP_REG_B } }
rbx, { QWORD, REG_GP, { .gp_reg = GP_REG_B } }
ah, { BYTE, REG_GP, { .gp_reg = GP_REG_AH_SP } }
ch, { BYTE, REG_GP, { .gp_reg = GP_REG_CH_BP } }
dh, { BYTE, REG_GP, { .gp_reg = GP_REG_DH_SI } }
bh, { BYTE, REG_GP, { .gp_reg = GP_REG_BH_DI } }
sp, { WORD, REG_GP, { .gp_reg = GP_REG_AH_SP } }
esp, { DWORD, REG_GP, { .gp_reg = GP_REG_AH_SP } }
rsp, { QWORD, REG_GP, { .gp_reg = GP_REG_AH_SP } }
bp, { WORD, REG_GP, { .gp_reg = GP_REG_CH_BP } }
ebp, { DWORD, REG_GP, { .gp_reg = GP_REG_CH_BP } }
rbp, { QWORD, REG_GP, { .gp_reg = GP_REG_CH_BP } }
si, { WORD, REG_GP, { .gp_reg = GP_REG_DH_SI } }
esi, { DWORD, REG_GP, { .gp_reg = GP_REG_DH_SI } }
rsi, { QWORD, REG_GP, { .gp_reg = GP_REG_DH_SI } }
di, { WORD, REG_GP, { .gp_reg = GP_REG_BH_DI } }
edi, { DWORD, REG_GP, { .gp_reg = GP_REG_BH_DI } }
rdi, { QWORD, REG_GP, { .gp_reg = GP_REG_BH_DI } }
r8b, { BYTE, REG_GP, { .gp_reg = GP_REG_R8 } }
r8w, { WORD, REG_GP, { .gp_reg = GP_REG_R8 } }
r8d, { DWORD, REG_GP, { .gp_reg = GP_REG_R8 } }
r8, { QWORD, REG_GP, { .gp_reg = GP_REG_R8 } }
r9b, { BYTE, REG_GP, { .gp_reg = GP_REG_R9 } }
r9w, { WORD, REG_GP, { .gp_reg = GP_REG_R9 } }
r9d, { DWORD, REG_GP, { .gp_reg = GP_REG_R9 } }
r9, { QWORD, REG_GP, { .gp_reg = GP_REG_R9 } }
r10b, { BYTE, REG_GP, { .gp_reg = GP_REG_R10 } }
r10w, { WORD, REG_GP, { .gp_reg = GP_REG_R10 } }
r10d, { DWORD, REG_GP, { .gp_reg = GP_REG_R10 } }
r10, { QWORD, REG_GP, { .gp_reg = GP_REG_R10 } }
r11b, { BYTE, REG_GP, { .gp_reg = GP_REG_R11 } }
r11w, { WORD, REG_GP, { .gp_reg = GP_REG_R11 } }
r11d, { DWORD, REG_GP, { .gp_reg = GP_REG_R11 } }
r11, { QWORD, REG_GP, { .gp_reg = GP_REG_R11 } }
r12b, { BYTE, REG_GP, { .gp_reg = GP_REG_R12 } }
r12w, { WORD, REG_GP, { .gp_reg = GP_REG_R12 } }
r12d, { DWORD, REG_GP, { .gp_reg = GP_REG_R12 } }
r12, { QWORD, REG_GP, { .gp_reg = GP_REG_R12 } }
r13b, { BYTE, REG_GP, { .gp_reg = GP_REG_R13 } }
r13w, { WORD, REG_GP, { .gp_reg = GP_REG_R13 } }
r13d, { DWORD, REG_GP, { .gp_reg = GP_REG_R13 } }
r13, { QWORD, REG_GP, { .gp_reg = GP_REG_R13 } }
r14b, { BYTE, REG_GP, { .gp_reg = GP_REG_R14 } }
r14w, { WORD, REG_GP, { .gp_reg = GP_REG_R14 } }
r14d, { DWORD, REG_GP, { .gp_reg = GP_REG_R14 } }
r14, { QWORD, REG_GP, { .gp_reg = GP_REG_R14 } }
r15b, { BYTE, REG_GP, { .gp_reg = GP_REG_R15 } }
r15w, { WORD, REG_GP, { .gp_reg = GP_REG_R15 } }
r15d, { DWORD, REG_GP, { .gp_reg = GP_REG_R15 } }
r15, { QWORD, REG_GP, { .gp_reg = GP_REG_R15 } }
es, { WORD, REG_S, { .segment_reg = S_REG_ES } }
cs, { WORD, REG_S, { .segment_reg = S_REG_CS } }
ss, { WORD, REG_S, { .segment_reg = S_REG_SS } }
ds, { WORD, REG_S, { .segment_reg = S_REG_DS } }
fs, { WORD, REG_S, { .segment_reg = S_REG_FS } }
gs, { WORD, REG_S, { .segment_reg = S_REG_GS } }
st0, { BYTE, REG_x87, { .x87_reg = x87_REG_ST0 } }
st1, { BYTE, REG_x87, { .x87_reg = x87_REG_ST1 } }
st2, { BYTE, REG_x87, { .x87_reg = x87_REG_ST2 } }
st3, { BYTE, REG_x87, { .x87_reg = x87_REG_ST3 } }
st4, { BYTE, REG_x87, { .x87_reg = x87_REG_ST4 } }
st5, { BYTE, REG_x87, { .x87_reg = x87_REG_ST5 } }
st6, { BYTE, REG_x87, { .x87_reg = x87_REG_ST6 } }
st7, { BYTE, REG_x87, { .x87_reg = x87_REG_ST7 } }
mm0, { BYTE, REG_MMX, { .mmx_reg = MMX_REG_MM0 } }
mm1, { BYTE, REG_MMX, { .mmx_reg = MMX_REG_MM1 } }
mm2, { BYTE, REG_MMX, { .mmx_reg = MMX_REG_MM2 } }
mm3, { BYTE, REG_MMX, { .mmx_reg = MMX_REG_MM3 } }
mm4, { BYTE, REG_MMX, { .mmx_reg = MMX_REG_MM4 } }
mm5, { BYTE, REG_MMX, { .mmx_reg = MMX_REG_MM5 } }
mm6, { BYTE, REG_MMX, { .mmx_reg = MMX_REG_MM6 } }
mm7, { BYTE, REG_MMX, { .mmx_reg = MMX_REG_MM7 } }
xmm0, { BYTE, REG_XMM, { .xmm_reg = XMM_REG_XMM0 } }
xmm1, { BYTE, REG_XMM, { .xmm_reg = XMM_REG_XMM1 } }
xmm2, { BYTE, REG_XMM, { .xmm_reg = XMM_REG_XMM2 } }
xmm3, { BYTE, REG_XMM, { .xmm_reg = XMM_REG_XMM3 } }
xmm4, { BYTE, REG_XMM, { .xmm_reg = XMM_REG_XMM4 } }
xmm5, { BYTE, REG_XMM, { .xmm_reg = XMM_REG_XMM5 } }
xmm6, { BYTE, REG_XMM, { .xmm_reg = XMM_REG_XMM6 } }
xmm7, { BYTE, REG_XMM, { .xmm_reg = XMM_REG_XMM7 } }
xmm8, { BYTE, REG_XMM, { .xmm_reg = XMM_REG_XMM8 } }
xmm9, { BYTE, REG_XMM, { .xmm_reg = XMM_REG_XMM9 } }
xmm10, { BYTE, REG_XMM, { .xmm_reg = XMM_REG_XMM10 } }
xmm11, { BYTE, REG_XMM, { .xmm_reg = XMM_REG_XMM11 } }
xmm12, { BYTE, REG_XMM, { .xmm_reg = XMM_REG_XMM12 } }
xmm13, { BYTE, REG_XMM, { .xmm_reg = XMM_REG_XMM13 } }
xmm14, { BYTE, REG_XMM, { .xmm_reg = XMM_REG_XMM14 } }
xmm15, { BYTE, REG_XMM, { .xmm_reg = XMM_REG_XMM15 } }
ymm0, { BYTE, REG_YMM, { .ymm_reg = YMM_REG_YMM0 } }
ymm1, { BYTE, REG_YMM, { .ymm_reg = YMM_REG_YMM1 } }
ymm2, { BYTE, REG_YMM, { .ymm_reg = YMM_REG_YMM2 } }
ymm3, { BYTE, REG_YMM, { .ymm_reg = YMM_REG_YMM3 } }
ymm4, { BYTE, REG_YMM, { .ymm_reg = YMM_REG_YMM4 } }
ymm5, { BYTE, REG_YMM, { .ymm_reg = YMM_REG_YMM5 } }
ymm6, { BYTE, REG_YMM, { .ymm_reg = YMM_REG_YMM6 } }
ymm7, { BYTE, REG_YMM, { .ymm_reg = YMM_REG_YMM7 } }
ymm8, { BYTE, REG_YMM, { .ymm_reg = YMM_REG_YMM8 } }
ymm9, { BYTE, REG_YMM, { .ymm_reg = YMM_REG_YMM9 } }
ymm10, { BYTE, REG_YMM, { .ymm_reg = YMM_REG_YMM10 } }
ymm11, { BYTE, REG_YMM, { .ymm_reg = YMM_REG_YMM11 } }
ymm12, { BYTE, REG_YMM, { .ymm_reg = YMM_REG_YMM12 } }
ymm13, { BYTE, REG_YMM, { .ymm_reg = YMM_REG_YMM13 } }
ymm14, { BYTE, REG_YMM, { .ymm_reg = YMM_REG_YMM14 } }
ymm15, { BYTE, REG_YMM, { .ymm_reg = YMM_REG_YMM15 } }
dr0, { DWORD, REG_D, { .debug_reg = D_REG_DR0 } }
dr1, { DWORD, REG_D, { .debug_reg = D_REG_DR1 } }
dr2, { DWORD, REG_D, { .debug_reg = D_REG_DR2 } }
dr3, { DWORD, REG_D, { .debug_reg = D_REG_DR3 } }
dr4, { DWORD, REG_D, { .debug_reg = D_REG_DR4 } }
dr5, { DWORD, REG_D, { .debug_reg = D_REG_DR5 } }
dr6, { DWORD, REG_D, { .debug_reg = D_REG_DR6 } }
dr7, { DWORD, REG_D, { .debug_reg = D_REG_DR7 } }
dr8, { DWORD, REG_D, { .debug_reg = D_REG_DR8 } }
dr9, { DWORD, REG_D, { .debug_reg = D_REG_DR9 } }
dr10, { DWORD, REG_D, { .debug_reg = D_REG_DR10 } }
dr11, { DWORD, REG_D, { .debug_reg = D_REG_DR11 } }
dr12, { DWORD, REG_D, { .debug_reg = D_REG_DR12 } }
dr13, { DWORD, REG_D, { .debug_reg = D_REG_DR13 } }
dr14, { DWORD, REG_D, { .debug_reg = D_REG_DR14 } }
dr15, { DWORD, REG_D, { .debug_reg = D_REG_DR15 } }
cr0, { DWORD, REG_C, { .control_reg = C_REG_CR0 } }
cr1, { DWORD, REG_C, { .control_reg = C_REG_CR1 } }
cr2, { DWORD, REG_C, { .control_reg = C_REG_CR2 } }
cr3, { DWORD, REG_C, { .control_reg = C_REG_CR3 } }
cr4, { DWORD, REG_C, { .control_reg = C_REG_CR4 } }
cr5, { DWORD, REG_C, { .control_reg = C_REG_CR5 } }
cr6, { DWORD, REG_C, { .control_reg = C_REG_CR6 } }
cr7, { DWORD, REG_C, { .control_reg = C_REG_CR7 } }
cr8, { DWORD, REG_C, { .control_reg = C_REG_CR8 } }
cr9, { DWORD, REG_C, { .control_reg = C_REG_CR9 } }
cr10, { DWORD, REG_C, { .control_reg = C_REG_CR10 } }
cr11, { DWORD, REG_C, { .control_reg = C_REG_CR11 } }
cr12, { DWORD, REG_C, { .control_reg = C_REG_CR12 } }
cr13, { DWORD, REG_C, { .control_reg = C_REG_CR13 } }
cr14, { DWORD, REG_C, { .control_reg = C_REG_CR14 } }
cr15, { DWORD, REG_C, { .control_reg = C_REG_CR15 } }
